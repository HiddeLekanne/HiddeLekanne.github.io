var searchData=
[
  ['acceptconnection',['acceptConnection',['../classTCPServer.html#aea2166af021b485fa5cec5a9d76afb54',1,'TCPServer']]],
  ['actionsfinished',['actionsFinished',['../classDNTWindow.html#a7546842d96af287b8bc7fb4517b4fdf2',1,'DNTWindow']]],
  ['adddecision',['addDecision',['../classDecisionEngine.html#af1e8ab0d6d8faadb9f2321f85fd67580',1,'DecisionEngine::addDecision()'],['../default_8h.html#a8e7db154fee23d4b6a6ab52adb3bd8b9',1,'addDecision(name(&quot;Default rule - do nothing&quot;), description(&quot;&quot;), UtilityScore::SlightlyUseful, events {Event::Always}, considerations { consideration(description(&quot;Constant&quot;), range(0, 1), Spline::Linear({{0.f, 0.f}, {1.f, 1.f}}), { return 1e-4;})}, actions { output_motion_request_-&gt;motion_=Motion::none;}):&#160;default.h'],['../default_8h.html#a1bdf3b26dd64d318bf793e6186fbe75b',1,'addDecision(name(&quot;Penalised!&quot;), description(&quot;Robot is penalised&quot;), UtilityScore::MostUseful, events {Event::Penalized}, considerations { consideration(description(&quot;Constant&quot;), range(0, 1), Spline::Linear({{0.f, 0.f}, {1.f, 1.f}}), { return 1;})}, actions { output_motion_request_-&gt;motion_=Motion::walk;output_motion_request_-&gt;walkMode=rWalkGenerator::speedMode;output_motion_request_-&gt;resetWalk=true;output_motion_request_-&gt;walkSpeed=Pose2f(0.f, Eigen::Vector2f(0.f, 0.f));}):&#160;default.h'],['../default_8h.html#a2022bd9b814f7b0dce37abca628e1cd5',1,'addDecision(name(&quot;Get up&quot;), description(&quot;get up&quot;), UtilityScore::MostUseful, events {Event::Fallen}, considerations { consideration(description(&quot;Laying down&quot;), range(0, 1), Spline::Linear({{0.f, 0.f}, {1.f, 1.f}}), { return falldown_representation_-&gt;state==rFallDownState::State::fallen;})}, actions { output_motion_request_-&gt;walkMode=rWalkGenerator::speedMode;output_motion_request_-&gt;resetWalk=true;output_motion_request_-&gt;walkSpeed=Pose2f(0.f, Eigen::Vector2f(0.f, 0.f));if(falldown_representation_-&gt;direction==rFallDownState::Direction::forward) { output_motion_request_-&gt;motion_=Motion::getup_front;} else { output_motion_request_-&gt;motion_=Motion::getup_back;} }):&#160;default.h'],['../finished_8h.html#af5932219d9247585701c10038ee565df',1,'addDecision(name(&quot;Finished state - stand&quot;), description(&quot;&quot;), UtilityScore::Useful, events {Event::Finished}, considerations { consideration(description(&quot;Constant&quot;), range(0, 1), Spline::Linear({{0.f, 0.f}, {1.f, 1.f}}), { return 1;})}, actions { output_motion_request_-&gt;motion_=Motion::stand;}):&#160;finished.h'],['../initial_8h.html#ac5ed1c5b02aa4d2e5d91e8fec246b8a4',1,'addDecision(name(&quot;Initial stand&quot;), description(&quot;&quot;), UtilityScore::Useful, events {Event::Initial}, considerations { consideration(description(&quot;Stand around while being placed&quot;), range(0, 1), Spline::Linear({{0.f, 0.f}, {1.f, 1.f}}), { return 1;})}, actions { output_motion_request_-&gt;motion_=Motion::stand;}):&#160;initial.h'],['../ready_8h.html#a5cdda4760e454d4a104b3085a3fd816c',1,'addDecision(name(&quot;Ready walk forward&quot;), description(&quot;walk forward in ready state&quot;), UtilityScore::Useful, events {Event::Ready}, considerations { consideration(description(&quot;Constant&quot;), range(0, 1), Spline::Linear({{0.f, 0.f}, {1.f, 1.f}}), { return 1.f;})}, actions { location_methods_.walkToReadyPosition(robot_position_representation_-&gt;robot_pose_, output_motion_request_);}):&#160;ready.h'],['../set_8h.html#ac231d35eca3fd27c726d3c659b47a230',1,'addDecision(name(&quot;Set&quot;), description(&quot;&quot;), UtilityScore::Useful, events {Event::Set}, considerations { }, actions { output_motion_request_-&gt;motion_=Motion::stand;if(microphone_representation_-&gt;whistle_detected_) { clearActive();raiseEvent(Event::PlayingNone);} if(ready_timestamp_ !=0) { ready_timestamp_=0;} penalised_timestamp_=-1;}):&#160;set.h'],['../jump__goalie_8h.html#a999b6e49de62fc16293a5b5522664026',1,'addDecision(name(&quot;jump right&quot;), description(&quot;...&quot;), UtilityScore::Useful, events {Event::PlayingNone}, considerations { consideration(description(&quot;ball is right&quot;), range(-1, 1), Spline::Linear({{0.f, 1.f}, {0.430f, 0.f}, {1.f, 0.f}}), { return ball_representation_-&gt;angle_;}), consideration(description(&quot;Ball seen recently&quot;), range(0, 4000), Spline::Linear({{0.f, 1.f}, {1.f, 0.f}}), { return SystemTools::getTimeSince(static_cast&lt; unsigned long long &gt;(ball_representation_-&gt;ball_last_seen_));})}, actions { output_motion_request_-&gt;motion_=Motion::fall_right;output_motion_request_-&gt;resetWalk=false;}):&#160;jump_goalie.h'],['../jump__goalie_8h.html#a4c36993173727b1bbc9641a3332c053e',1,'addDecision(name(&quot;jump left&quot;), description(&quot;...&quot;), UtilityScore::Useful, events {Event::PlayingNone}, considerations { consideration(description(&quot;ball is left&quot;), range(-1, 1), Spline::Linear({{0.f, 0.f}, {0.570f, 0.f}, {1.f, 1.f}}), { return ball_representation_-&gt;angle_;}), consideration(description(&quot;Ball seen recently&quot;), range(0, 4000), Spline::Linear({{0.f, 1.f}, {1.f, 0.f}}), { return SystemTools::getTimeSince(static_cast&lt; unsigned long long &gt;(ball_representation_-&gt;ball_last_seen_));})}, actions { output_motion_request_-&gt;motion_=Motion::fall_left;output_motion_request_-&gt;resetWalk=false;}):&#160;jump_goalie.h'],['../player_8h.html#a645d93fda86bc34af71d1bda3af992bf',1,'addDecision(name(&quot;Search for ball&quot;), description(&quot;Search for the ball with the whole body&quot;), UtilityScore::Useful, events {Event::PlayingNone, Event::PlayingGoalKick, Event::PlayingFoulKick}, considerations { consideration(description(&quot;Ball not seen recently&quot;), range(2000, 10000), Spline::Monotone({{0.f, 0.f}, {0.526f, 0.7166666666666667f}, {1.f, 1.f}}), { return SystemTools::getTimeSince(static_cast&lt; unsigned long long &gt;(ball_representation_-&gt;ball_last_seen_));})}, actions { output_motion_request_-&gt;motion_=Motion::walk;output_motion_request_-&gt;resetWalk=false;float angle=ball_representation_-&gt;angle_;if(angle &gt;=0.f) angle=1.f;else angle=-1.f;output_motion_request_-&gt;walkWithSpeed(0.f, 0.f, 0.7f *angle);}):&#160;player.h'],['../player_8h.html#a67c6d08dd9f5668b724cd1b62d3dd41b',1,'addDecision(name(&quot;Walk to ball&quot;), description(&quot;Walk towards the ball if we see a ball&quot;), UtilityScore::Useful, events {Event::PlayingNone}, considerations { consideration(description(&quot;Ball is seen recently&quot;), range(0, 3000), Spline::Monotone({{0.f, 1.f}, {0.498f, 1.f}, {0.972f, 0.f}, {1.f, 0.f}}), { return SystemTools::getTimeSince(static_cast&lt; unsigned long long &gt;(ball_representation_-&gt;ball_last_seen_));})}, actions { output_motion_request_-&gt;motion_=Motion::walk;output_motion_request_-&gt;resetWalk=false;float angle=ball_representation_-&gt;angle_;if(std::fabs(angle) &gt;=0.15f) { if(angle &gt; 0) angle=1.f;else angle=-1.f;output_motion_request_-&gt;walkWithSpeed(0.f, 0.f, 0.7f *angle);} else { output_motion_request_-&gt;walkWithSpeed(200.f, 0.f, 0.f);} }):&#160;player.h'],['../player_8h.html#a9213cf090f1cf6026d380d4c6e9f22c9',1,'addDecision(name(&quot;Walk to ball (free kick)&quot;), description(&quot;Walk towards the ball if we see a ball&quot;), UtilityScore::SlightlyUseful, events {Event::PlayingGoalKick, Event::PlayingFoulKick}, considerations { consideration(description(&quot;Ball is seen recently&quot;), range(0, 3000), Spline::Monotone({{0.f, 1.f}, {0.498f, 1.f}, {0.972f, 0.f}, {1.f, 0.f}}), { return SystemTools::getTimeSince(static_cast&lt; unsigned long long &gt;(ball_representation_-&gt;ball_last_seen_));}), consideration(description(&quot;Ball is further than 0.75m&quot;), range(0, 350), Spline::Linear({{0.f, 1.f}, {0.752f, 1.f}, {0.806f, 0.11f}, {1.f, 0.f}}), { if(!ball_representation_-&gt;is_upper_) { return 350;} return ball_representation_-&gt;y_;})}, actions { output_motion_request_-&gt;motion_=Motion::walk;output_motion_request_-&gt;resetWalk=false;float angle=ball_representation_-&gt;angle_;if(std::fabs(angle) &gt;=0.15f) { if(angle &gt; 0) angle=1.f;else angle=-1.f;output_motion_request_-&gt;walkWithSpeed(0.f, 0.f, 0.7f *angle);} else { output_motion_request_-&gt;walkWithSpeed(200.f, 0.f, 0.f);} }):&#160;player.h'],['../player_8h.html#a0b362ef90a81ccd57776cfd77e1acd0d',1,'addDecision(name(&quot;Walk away from ball (free kick)&quot;), description(&quot;&quot;), UtilityScore::SlightlyUseful, events {Event::PlayingGoalKick, Event::PlayingFoulKick}, considerations { consideration(description(&quot;Ball is closer than 0.75m&quot;), range(250, 700), Spline::Linear({{0.f, 0.f}, {0.028f, 0.9f}, {0.102f, 1.f}, {1.f, 1.f}}), { if(!ball_representation_-&gt;is_upper_) { return 700;} return ball_representation_-&gt;y_;}), consideration(description(&quot;Ball is seen recently&quot;), range(0, 3000), Spline::Monotone({{0.f, 1.f}, {0.498f, 1.f}, {0.972f, 0.f}, {1.f, 0.f}}), { return SystemTools::getTimeSince(static_cast&lt; unsigned long long &gt;(ball_representation_-&gt;ball_last_seen_));})}, actions { output_motion_request_-&gt;resetWalk=false;output_motion_request_-&gt;motion_=Motion::walk;output_motion_request_-&gt;walkWithSpeed(-200.f, 0.f, 0.f);}):&#160;player.h'],['../player_8h.html#af1903bee50236c43e641b6c9f7b9d252',1,'addDecision(name(&quot;Turn to ball (free kick)&quot;), description(&quot;&quot;), UtilityScore::MostUseful, events {Event::PlayingGoalKick, Event::PlayingFoulKick}, considerations { consideration(description(&quot;Ball is seen recently&quot;), range(0, 3000), Spline::Monotone({{0.f, 1.f}, {0.498f, 1.f}, {0.972f, 0.f}, {1.f, 0.f}}), { return SystemTools::getTimeSince(static_cast&lt; unsigned long long &gt;(ball_representation_-&gt;ball_last_seen_));}), consideration(description(&quot;Ball at ~0.75m&quot;), range(150, 400), Spline::Monotone({{0.f, 0.f}, {0.67f, 1.f}, {0.844f, 1.f}, {1.f, 0.f}}), { if(!ball_representation_-&gt;is_upper_) { return 0;} return ball_representation_-&gt;y_;}), consideration(description(&quot;Ball is not in center&quot;), range(0, 640), Spline::Monotone({{0.f, 1.f}, {0.338f, 0.7366666666666667f}, {0.504f, 0.f}, {0.662f, 0.7466666666666667f}, {1.f, 1.f}}), { return ball_representation_-&gt;x_;})}, actions { float angle=ball_representation_-&gt;angle_;output_motion_request_-&gt;motion_=Motion::walk;if(angle &gt; 0) angle=1.f;else angle=-1.f;output_motion_request_-&gt;walkWithSpeed(0.f, 0.f, 0.7f *angle);}):&#160;player.h'],['../player_8h.html#a367e3dacaafa839bb7f9dca61e8083ee',1,'addDecision(name(&quot;Stand still&quot;), description(&quot;Stand still by stop walking&quot;), UtilityScore::SlightlyUseful, events {Event::PlayingNone, Event::PlayingGoalKick, Event::PlayingFoulKick}, considerations { consideration(description(&quot;Constant&quot;), range(0, 1), Spline::Linear({{0.f, 0.f}, {1.f, 1.f}}), { return 0.001;})}, actions { output_motion_request_-&gt;resetWalk=true;output_motion_request_-&gt;motion_=Motion::walk;output_motion_request_-&gt;walkWithSpeed(0.f, 0.f, 0.f);}):&#160;player.h'],['../walk__test_8h.html#a5e2575e5e46afb6bfa4e7873e09ec944',1,'addDecision(name(&quot;Search for ball&quot;), description(&quot;Search for the ball with the whole body&quot;), UtilityScore::Useful, events {Event::PlayingNone}, considerations { consideration(description(&quot;Ball not seen recently&quot;), range(3000, 10000), Spline::Monotone({{0.f, 0.f}, {0.526f, 0.7166666666666667f}, {1.f, 1.f}}), { return SystemTools::getTimeSince(static_cast&lt; unsigned long long &gt;(ball_representation_-&gt;ball_last_seen_));})}, actions { output_motion_request_-&gt;motion_=Motion::walk;output_motion_request_-&gt;resetWalk=false;float angle=ball_representation_-&gt;angle_;if(angle &gt;=0.f) angle=1.f;else angle=-1.f;output_motion_request_-&gt;walkWithSpeed(0.f, 0.f, 0.7f *angle);}):&#160;walk_test.h'],['../walk__test_8h.html#af518ae1e2f58e36be5d8033be1e8b83c',1,'addDecision(name(&quot;Walk to ball&quot;), description(&quot;Walk towards the ball if we see a ball&quot;), UtilityScore::Useful, events {Event::PlayingNone}, considerations { consideration(description(&quot;Ball is seen recently&quot;), range(0, 4000), Spline::Monotone({{0.f, 1.f}, {0.498f, 1.f}, {0.972f, 0.f}, {1.f, 0.f}}), { return SystemTools::getTimeSince(static_cast&lt; unsigned long long &gt;(ball_representation_-&gt;ball_last_seen_));})}, actions { output_motion_request_-&gt;motion_=Motion::walk;output_motion_request_-&gt;resetWalk=false;float angle=ball_representation_-&gt;angle_;if(std::fabs(angle) &gt;=0.2f) { if(angle &gt; 0) angle=1.f;else angle=-1.f;output_motion_request_-&gt;walkWithSpeed(0.f, 0.f, 0.7f *angle);} else { output_motion_request_-&gt;walkWithSpeed(300.f, 0.f, 0.f);} }):&#160;walk_test.h'],['../walk__test_8h.html#aea763e98177ebc586e7f53877fc215bf',1,'addDecision(name(&quot;Stand still&quot;), description(&quot;Stand still by stop walking&quot;), UtilityScore::SlightlyUseful, events {Event::PlayingNone}, considerations { consideration(description(&quot;Constant&quot;), range(0, 1), Spline::Linear({{0.f, 0.f}, {1.f, 1.f}}), { return 0.001;})}, actions { output_motion_request_-&gt;motion_=Motion::walk;output_motion_request_-&gt;resetWalk=true;output_motion_request_-&gt;walkWithSpeed(0.f, 0.f, 0.f);}):&#160;walk_test.h']]],
  ['addinput',['addInput',['../classOutputMessageBase.html#ae8cff887b49c2fa6372922adea74c7c3',1,'OutputMessageBase::addInput()'],['../classOutputMessage.html#ac3c6d00804abfea229b1aad9856bc399',1,'OutputMessage::addInput()']]],
  ['addmodule',['addModule',['../classModuleGroup.html#aa7a3a7d15f6ec20aa8caea6382098e54',1,'ModuleGroup::addModule()'],['../classModuleManager.html#a98efa46e4ac225471c40bd0440db4052',1,'ModuleManager::addModule()']]],
  ['almost_5fequal',['almost_equal',['../classFloatCompare.html#a512fae2ca96a2d64706948f3d87436a0',1,'FloatCompare']]],
  ['almost_5fzero',['almost_zero',['../classFloatCompare.html#a6bd4edd72707beb531646907f3f11818',1,'FloatCompare']]],
  ['alrobot',['ALRobot',['../classALRobot.html#ade0e4f5975f1056500d3cce90df58b19',1,'ALRobot']]],
  ['angle',['Angle',['../classAngle.html#aa3c01f3bf10e064e1a364f55203ac43e',1,'Angle::Angle()=default'],['../classAngle.html#a3cc9b028b373ab64d3a5ba9555d4ac1c',1,'Angle::Angle(float angle)'],['../EigenMatrixBaseExtensions_8h.html#a84f2047f4d3c614c7ca8331705b496d1',1,'angle():&#160;EigenMatrixBaseExtensions.h']]],
  ['angleto',['angleTo',['../EigenMatrixBaseExtensions_8h.html#aa3f2f3c9a2cc905560ecc2279b87749b',1,'EigenMatrixBaseExtensions.h']]],
  ['appendtoconsole',['appendToConsole',['../classDNTWindow.html#abc3479bf4416e43b154795d8ffbeee50',1,'DNTWindow']]],
  ['argumentparser',['ArgumentParser',['../classArgumentParser.html#aa3947930674c4fb436ec0c004bc102ae',1,'ArgumentParser']]],
  ['aroundx',['aroundX',['../classRotationMatrix.html#a660725cbcc13dcb019bf064cadd70140',1,'RotationMatrix::aroundX()'],['../namespaceRotation.html#a82420afaedb4150194ed572d8977fd28',1,'Rotation::aroundX()']]],
  ['aroundy',['aroundY',['../classRotationMatrix.html#a2181b4cfeee50d803b43c97fe6dd4a51',1,'RotationMatrix::aroundY()'],['../namespaceRotation.html#ac7876c80cb2cb0e2c29656a86224ae69',1,'Rotation::aroundY()']]],
  ['aroundz',['aroundZ',['../classRotationMatrix.html#a550e8560a65dede4c53018d3e2caff70',1,'RotationMatrix::aroundZ()'],['../namespaceRotation.html#ab616fe543d1a503b95977d370947bfb1',1,'Rotation::aroundZ()']]],
  ['array_5ftable',['array_table',['../classConfiguration_1_1detail_1_1TOMLHandler.html#a4ce5ceb58f7349eb81068e2c955f29c6',1,'Configuration::detail::TOMLHandler']]],
  ['assign',['assign',['../classConfiguration_1_1detail_1_1TOMLHandler.html#afe94a3ee5a79282f80d02e51d70f8725',1,'Configuration::detail::TOMLHandler']]],
  ['atan2',['atan2',['../namespaceApprox.html#adf19c02713f3d385d25d53267c52d980',1,'Approx::atan2(float y, float x)'],['../namespaceApprox.html#a58cd972af03ed83aba3b7b7247c962f6',1,'Approx::atan2(const short y, const short x)']]],
  ['atpostprocess',['atPostProcess',['../classALRobot.html#a714712deadb195367c5629fb988a992b',1,'ALRobot']]],
  ['atpreprocess',['atPreProcess',['../classALRobot.html#a9007364553416af6f66beeb863979a38',1,'ALRobot']]]
];
